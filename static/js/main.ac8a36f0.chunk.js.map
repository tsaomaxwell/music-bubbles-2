{"version":3,"sources":["components/SmallBubble.js","audio/salutdamour.mp3","components/BigBubble.js","audio/mozart.mp3","App.js","reportWebVitals.js","index.js"],"names":["SmallBubble","props","className","onClick","title","BigBubble","useState","parent","parentsName","setParentsName","childOne","childOneName","setChildOneName","genre","mainName","setMainName","info","musicInfo","setMusicInfo","song","source","setSource","audioRef","useRef","getBubble","current","pause","load","play","updateSong","romantic","console","log","controls","ref","src","type","App","classical","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAceA,MAXf,SAAqBC,GAEjB,OAAO,qBAAKC,UAAY,QAAQC,QAAW,WAAMF,EAAME,QAAQF,EAAMG,QAA9D,SACH,qBAAKF,UAAY,YAAjB,SACKD,EAAMG,WCPJ,MAA0B,wCC6E1BC,MApEf,SAAmBJ,GAAM,MAEiBK,mBAASL,EAAMM,QAFhC,mBAEdC,EAFc,KAEDC,EAFC,OAGmBH,mBAASL,EAAMS,UAHlC,mBAGdC,EAHc,KAGAC,EAHA,OAIWN,mBAASL,EAAMY,OAJ1B,mBAIdC,EAJc,KAIJC,EAJI,OAKaT,mBAASL,EAAMe,MAL5B,mBAKdC,EALc,KAKHC,EALG,OAMOZ,mBAASL,EAAMkB,MANtB,mBAMdC,EANc,KAMNC,EANM,KASfC,EAAWC,mBAYjB,SAASC,EAAUvB,GACfQ,EAAe,aACfG,EAAgB,iBAChBG,EAAY,YACZG,EAAa,mCAfE,SAACE,GAChBC,EAAUD,GACPE,EAASG,UACRH,EAASG,QAAQC,QACjBJ,EAASG,QAAQE,OACjBL,EAASG,QAAQG,QAWrBC,CAAWC,GACXC,QAAQC,IAAI,WAIhB,OAAO,sBAAK9B,UAAY,MAAjB,UAEH,cAAC,EAAD,CACQE,MAAOI,EACPL,QAASqB,IAIjB,sBAAKtB,UAAY,QAAjB,UACI,qBAAKA,UAAY,OAAjB,SACKY,IAEL,sBACA,wBAAOmB,UAAQ,EAACC,IAAKZ,EAArB,UACI,wBAAQa,IAAKf,EAAQgB,KAAO,eADhC,yBAIA,sBACA,qBAAKlC,UAAY,OAAjB,SACKe,OAOR,cAAC,EAAD,CACGb,MAAOO,EACPR,QAASqB,QCpEN,MAA0B,mCCqB1Ba,MAdf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAAC,EAAD,CACEK,OAAS,UACTG,SAAW,WACXG,MAAQ,YACRM,KAAQmB,EACRtB,KAAO,2FCHAuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac8a36f0.chunk.js","sourcesContent":["import './SmallBubble.css';\n\n\nfunction SmallBubble(props){\n\n    return <div className = 'outer' onClick = {()=> {props.onClick(props.title)}} >\n        <div className = 'nameSmall'>\n            {props.title}\n        </div>\n    </div>\n    \n}\n\n\nexport default SmallBubble;","export default __webpack_public_path__ + \"static/media/salutdamour.d8cf56d5.mp3\";","import React, { useState , useRef } from 'react'\n//mport ReactDOM from 'react-dom'\n//import CSVReader from 'react-csv-reader'\nimport './BigBubble.css';\nimport SmallBubble from './SmallBubble.js'\n\nimport romantic from '../audio/salutdamour.mp3';\n\n\nfunction BigBubble(props){\n    //all the states needed to change the bubble contents\n    const [parentsName, setParentsName] = useState(props.parent); // update later to array handling\n    const [childOneName, setChildOneName] = useState(props.childOne);// update later for array handling\n    const [mainName, setMainName] = useState(props.genre);\n    const [musicInfo, setMusicInfo] = useState(props.info);\n    const [source, setSource] = useState(props.song);\n\n    //create handling to reload the song in each bubble change\n    const audioRef = useRef();\n    const updateSong = (source) => {\n        setSource(source);\n        if(audioRef.current){\n            audioRef.current.pause();\n            audioRef.current.load();\n            audioRef.current.play();\n        }\n    }\n    \n    //get the next bubble and change the state for all bubbles\n    //currently doesnt do that. place holder for now. needs some sort of array handling\n    function getBubble(props){\n        setParentsName(\"Classical\");\n        setChildOneName(\"Impressionist\");\n        setMainName(\"Romantic\");\n        setMusicInfo(\"It's all in the name. 1830-1900\");\n        updateSong(romantic);\n        console.log(\"clicked\");\n    \n    }\n\n    return <div className = \"Big\">\n\n        <SmallBubble\n                title={parentsName}\n                onClick={getBubble}\n        />\n\n\n        <div className = 'inner'>\n            <div className = 'name'>\n                {mainName}\n            </div>\n            <p></p>\n            <audio controls ref={audioRef}>\n                <source src={source} type = \"audio/mpeg\" />\n                Music not supported\n            </audio>\n            <p></p>\n            <div className = 'info'>\n                {musicInfo}\n            </div>\n        </div>\n\n        \n\n\n         <SmallBubble\n            title={childOneName}\n            onClick={getBubble}\n        />\n\n    </div>\n\n\n}\n\n\nexport default BigBubble;","export default __webpack_public_path__ + \"static/media/mozart.6e966921.mp3\";","import './App.css';\n\nimport BigBubble from './components/BigBubble';\n\nimport classical from './audio/mozart.mp3';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BigBubble \n        parent = 'Baroque'\n        childOne = 'Romantic'\n        genre = 'Classical'\n        song = {classical}\n        info = 'Lasted from roughly 1730 to 1820 and focused on homophonic style and light elegance'\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}